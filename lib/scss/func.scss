$fs: 0.3rem; //文字基础大小
$fc: #333;
$default-color: #FF3A3A;
$default-bg: linear-gradient(135deg,rgba(255,132,132,1) 0%,rgba(255,64,48,1) 100%,rgba(252,81,67,1) 100%);

@mixin bg-pic($url, $x:center, $y:center, $s:100% 100%) {
    background:url($url) $x $y no-repeat;
    background-size: $s;
}
  
@mixin img-set($url,$type:"png") {
    background-image: -webkit-image-set(url($url+'.'+$type) 1x, url($url+'@2x.'+$type) 2x,url($url+'@3x.'+$type) 3x);
}

@mixin one-px-border-top($color){
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 200%;
    height: 1px;
    border-top: 1px solid $color;
    transform: scale(0.5);
    transform-origin: 0 top;
}

@mixin one-px-border-bottom($color){
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 200%;
    height: 0;
    border-bottom: 1px solid $color;
    transform: scale(0.5);
    transform-origin: 0 bottom;
}

@mixin one-px-border-left($color){
    content: '';
    position: absolute;
    top:0;
    left: 0;
    width: 1px;
    height: 200%;
    border-left: 1px solid $color;
    transform: scale(0.5);
    transform-origin: left 0;
}

@mixin one-px-border-right($color){
    content: '';
    position: absolute;
    top:0;
    right: 0;
    width: 1px;
    height: 200%;
    border-left: 1px solid $color;
    transform: scale(0.5);
    transform-origin: right 0;
}
  
@mixin one-px-border($color){
    content: '';
    position: absolute;
    top:0;
    left: 0;
    width: 200%;
    height: 200%;
    box-sizing: border-box;
    border: 1px solid $color;
    transform: scale(0.5);
    transform-origin: 0 0;
    pointer-events: none;
}

// flex(主轴,交叉轴,方向,换行,多轴线对齐)
@mixin myflex($justify: null, $align: null, $direction: null, $wrap: null, $wrapAlign: null) {
    display: flex;
  
    @if $direction != null {
      @include flex-direction($direction);
    }
    @if $justify != null {
      @include flex-justify($justify);
    }
    @if $align != null {
      @include flex-align($align);
    }
    @if $wrap != null {
      @include flex-wrap($wrap);
    }
    @if $wrapAlign != null {
      @include flex-wrapAlign($wrapAlign);
    }
}
  
// flex-self(对齐,(布满||固定),顺序)
@mixin flex-self($flex: null, $align: null, $order: null){
    @if $flex != null {
      @if $flex == full {
        flex: auto;
      } @else if $flex == keep {
        flex: none;
      } @else {
        @include flexError($flex, 'flex-self');
      }
    }
  
    @if $align != null {
      @include flex-selfAlign($align);
    }
  
    @if $order != null {
      @include flex-order($order);
    }
}
  
  // flex错误提示
@mixin flexError($param, $type) {
    position: relative;
    background-color: #ff3c00 !important;
    overflow: hidden;
  
    &::after {
      position: absolute;
      bottom: 0;
      right: 0;
      padding: 0.5em;
      color: #ff3c00 !important;
      background-color: white !important;
      font-size: 12px;
      content: 'ErrorParam: #{$param} in #{$type}';
    }
}
  
  // 项目的排列方向
@mixin flex-direction($direction: row) {
    @if $direction == column {
      flex-direction: column;
    } @else if $direction == row {
      flex-direction: row;
    } @else if $direction == row-reverse {
      flex-direction: row-reverse;
    } @else if $direction == column-reverse {
      flex-direction: column-reverse;
    } @else {
      @include flexError($direction, 'flex-direction');
    }
}
  
  // 主轴上的对齐方式
@mixin flex-justify($justify: start) {
    @if $justify == start {
      justify-content: flex-start;
    } @else if $justify == center {
      justify-content: center;
    } @else if $justify == end {
      justify-content: flex-end;
    } @else if $justify == between {
      justify-content: space-between;
    } @else if $justify == around {
      justify-content: space-around;
    } @else {
      @include flexError($justify, 'flex-justify');
    }
}
  
  // 交叉轴上的对齐方式
@mixin flex-align($align: top) {
    @if $align == top {
      align-items: flex-start;
    } @else if $align == center {
      align-items: center;
    } @else if $align == bottom {
      align-items: flex-end;
    } @else {
      @include flexError($align, 'flex-align');
    }
}
  
  // 换行
@mixin flex-wrap($wrap: wrap) {
    @if $wrap == wrap {
      flex-wrap: wrap;
    } @else if $wrap == nowrap {
      flex-wrap: nowrap;
    } @else if $wrap == wrap-reverse {
      flex-wrap: wrap-reverse;
    } @else {
      @include flexError($wrap, 'flex-wrap');
    }
}
  
  // 换行多根轴线的对齐方式,如果项目只有一根轴线，该属性不起作用
@mixin flex-wrapAlign($align: stretch) {
    @if $align == stretch {
      align-content: stretch;
    } @else if $align == top {
      align-content: flex-start;
    } @else if $align == center {
      align-content: center;
    } @else if $align == bottom {
      align-content: flex-end;
    } @else if $align == between {
      align-content: space-between;
    } @else if $align == around {
      align-content: space-around;
    } @else {
      @include flexError($align, 'flex-wrapAlign');
    }
}
  
  // 单个项目有与其他项目不一样的对齐方式
@mixin flex-selfAlign($align: auto){
    @if $align == auto {
      align-self: auto;
    } @else if $align == top {
      align-self: flex-start;
    } @else if $align == center {
      align-self: center;
    } @else if $align == bottom {
      align-self: flex-end;
    } @else if $align == baseline {
      align-self: baseline ;
    } @else if $align == stretch {
      align-self: stretch;
    } @else {
      @include flexError($align, 'flex-self-align');
    }
}
  
  // 项目的排列顺序,数值越小，排列越靠前，默认为0
@mixin flex-order($order: 0){
    @if $order == round($order) {
      order: $order;
    } @else {
      @include flexError($order, 'flex-self-order');
    }
}

@mixin ellipsis($line:1){
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    text-overflow: ellipsis;
    overflow: hidden;
    -webkit-box-orient: vertical;
    word-wrap:break-word;
    word-break:break-all;
}
  
@mixin clearfix() {
    *zoom: 1;
  
    &:before,
    &:after {
        display: table;
        content: "";
    }
  
    &:after {
        clear: both;
    }
}

.txt-of {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.locked {
  overflow: hidden !important;
}

.fw500 {
  font-weight: 500;
}

.fw600 {
  font-weight: 600;
}

.fw700 {
  font-weight: 700;
}